# Profiling
zmodload zsh/zprof

# Main config
source ~/.config/zsh/zshrc

[[ -e "$HOME/.config/openai-api-keys" ]] && export OPENAI_API_KEY=$(cat ~/.config/openai-api-keys)

# added by Nix installer
if [ -e /home/m42nk/.nix-profile/etc/profile.d/nix.sh ]; then . /home/m42nk/.nix-profile/etc/profile.d/nix.sh; fi

# pnpm
export PNPM_HOME="/home/m42nk/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

export PATH=$PATH:/home/m42nk/.spicetify

if [[ -d '/Users/syakhisk.syari' ]]; then
  # The next line updates PATH for the Google Cloud SDK.
  if [ -f '/Users/syakhisk.syari/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/syakhisk.syari/google-cloud-sdk/path.zsh.inc'; fi

  # The next line enables shell command completion for gcloud.
  if [ -f '/Users/syakhisk.syari/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/syakhisk.syari/google-cloud-sdk/completion.zsh.inc'; fi

  [[ -f "$ZSH/jdk-brew.zsh" ]] && source "$ZSH/jdk-brew.zsh"

  export PATH="$PATH:$HOME/Library/Android/sdk/platform-tools"
  export PATH="$PATH:$HOME/Library/Android/sdk/emulator"
  export PATH="/opt/homebrew/lib/python3.11/site-packages:$PATH"
  export PATH="/opt/homebrew/opt/python@3.11/libexec/bin:$PATH"
  export PATH="$PATH:/Applications/GoLand.app/Contents/MacOS"

  # Homebrew ruby
  if $(brew list ruby &>/dev/null); then
    ## Latest
    # export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
    # export LDFLAGS="-L/opt/homebrew/opt/ruby/lib"
    # export CPPFLAGS="-I/opt/homebrew/opt/ruby/include"
    # export PKG_CONFIG_PATH="/opt/homebrew/opt/ruby/lib/pkgconfig"

    ## 2.7
    # export PATH="/opt/homebrew/opt/ruby@2.7/bin:$PATH"
    # export LDFLAGS="-L/opt/homebrew/opt/ruby@2.7/lib"
    # export CPPFLAGS="-I/opt/homebrew/opt/ruby@2.7/include"
    # export PKG_CONFIG_PATH="/opt/homebrew/opt/ruby@2.7/lib/pkgconfig"
  fi

  

  # check if directory starts with "~/Work/"
  ___update_goenv(){
    if [[ $(pwd) == $HOME/Work/* ]]; then
      [[ -n "$DEBUG_GOENV" ]] && echo "[zshrc] Exporting go env"
      export GOPRIVATE="source.golabs.io/*"
      export GONOSUMDB="source.golabs.io/*"
      export GOPROXY="http://artifactory-gojek.golabs.io/artifactory/go,https://proxy.golang.org,direct"
    else
      unset GOPRIVATE
      unset GONOSUMDB
      unset GOPROXY
    fi
  }

  add-zsh-hook chpwd ___update_goenv

  alias vpni="onevpn connect 'GOJEK Integration'"
  alias vpnidc="onevpn disconnect 'GOJEK Integration'"
fi
