###################################
## -------------------------------
##                     __
##    ____  __________/ /_  _____
##   /_  / / ___/ ___/ __ \/ ___/
##  _ / /_(__  ) /  / / / / /__
## (_)___/____/_/  /_/ /_/\___/
#
## --------------------vim:ft=zsh
###################################

# Profiling
zmodload zsh/zprof

##################################################
## NOTE:
## Add alert when zsh startup time took longer
##################################################

# NEW_CONFIG=${NEW_CONFIG:-0}
NEW_CONFIG=${NEW_CONFIG:-1}

# New Main config
if [[ $NEW_CONFIG -eq 1 ]]; then
  echo "Using new config"
  source ~/.config/zsh/v2/zshrc-mac
  return
fi

# Main config
source ~/.config/zsh/zshrc

[[ -e "$HOME/.config/openai-api-keys" ]] && export OPENAI_API_KEY=$(cat ~/.config/openai-api-keys)

# added by Nix installer
if [ -e /home/m42nk/.nix-profile/etc/profile.d/nix.sh ]; then . /home/m42nk/.nix-profile/etc/profile.d/nix.sh; fi

# pnpm
export PNPM_HOME="/home/m42nk/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

export PATH=$PATH:/home/m42nk/.spicetify

if [[ -d '/Users/syakhisk.syari' ]]; then
  # The next line updates PATH for the Google Cloud SDK.
  if [ -f '/Users/syakhisk.syari/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/syakhisk.syari/google-cloud-sdk/path.zsh.inc'; fi

  # The next line enables shell command completion for gcloud.
  if [ -f '/Users/syakhisk.syari/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/syakhisk.syari/google-cloud-sdk/completion.zsh.inc'; fi

  [[ -f "$ZSH/jdk-brew.zsh" ]] && source "$ZSH/jdk-brew.zsh"

  export PATH="$PATH:$HOME/Library/Android/sdk/platform-tools"
  export PATH="$PATH:$HOME/Library/Android/sdk/emulator"
  export PATH="/opt/homebrew/lib/python3.11/site-packages:$PATH"
  export PATH="/opt/homebrew/opt/python@3.11/libexec/bin:$PATH"
  export PATH="$PATH:/Applications/GoLand.app/Contents/MacOS"

  # check if directory starts with "~/Work/"
  ___update_goenv(){
    if [[ $(pwd) == $HOME/Work/* ]]; then
      [[ -n "$DEBUG_GOENV" ]] && echo "[zshrc] Exporting go env"
      export GOPRIVATE="source.golabs.io/*"
      export GONOSUMDB="source.golabs.io/*"
      export GOPROXY="http://artifactory-gojek.golabs.io/artifactory/go,https://proxy.golang.org,direct"
    else
      unset GOPRIVATE
      unset GONOSUMDB
      unset GOPROXY
    fi
  }

  add-zsh-hook chpwd ___update_goenv

  alias vpni="onevpn connect 'GOJEK Integration'"
  alias vpnidc="onevpn disconnect 'GOJEK Integration'"
fi
