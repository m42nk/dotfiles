# vim: ft=tmux

#####################################
# Tmux default Configuration
# 
# Setting all tmux options to their default
# doing so by running the command listed above each block
# 
# Run this command to create a clean tmux server
# $ tmux -L clean-env -f /dev/null              # start server and attach to it
# $ tmux -L clean-env -f /dev/null start-server # start server don't attach
# 
#####################################

#####################################
# Unbind all key to reset custom ones
#####################################
unbind-key -a

#####################################
# tmux show -g
#####################################

set -g activity-action other
set -g assume-paste-time 1
set -g base-index 0
set -g bell-action any
set -g default-command ''
set -g default-shell /bin/zsh
set -g default-size 80x24
set -g destroy-unattached off
set -g detach-on-destroy on
set -g display-panes-active-colour red
set -g display-panes-colour blue
set -g display-panes-time 1000
set -g display-time 750
set -g history-limit 2000
set -g key-table root
set -g lock-after-time 0
set -g lock-command "lock -np"
set -g message-command-style bg=black,fg=yellow
set -g message-style bg=yellow,fg=black
set -g mouse off
set -g prefix C-b
set -g prefix2 None
set -g renumber-windows off
set -g repeat-time 500
set -g set-titles off
set -g set-titles-string "#S:#I:#W - \"#T\" #{session_alerts}"
set -g silence-action other
set -g status on
set -g status-bg default
set -g status-fg default
set -g status-format[0] "#[align=left range=left #{status-left-style}]#[push-default]#{T;=/#{status-left-length}:status-left}#[pop-default]#[norange default]#[list=on align=#{status-justify}]#[list=left-marker]<#[list=right-marker]>#[list=on]#{W:#[range=window|#{window_index} #{window-status-style}#{?#{&&:#{window_last_flag},#{!=:#{window-status-last-style},default}}, #{window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{window-status-bell-style},default}}, #{window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}}]#[push-default]#{T:window-status-format}#[pop-default]#[norange default]#{?window_end_flag,,#{window-status-separator}},#[range=window|#{window_index} list=focus #{?#{!=:#{window-status-current-style},default},#{window-status-current-style},#{window-status-style}}#{?#{&&:#{window_last_flag},#{!=:#{window-status-last-style},default}}, #{window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{window-status-bell-style},default}}, #{window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}}]#[push-default]#{T:window-status-current-format}#[pop-default]#[norange list=on default]#{?window_end_flag,,#{window-status-separator}}}#[nolist align=right range=right #{status-right-style}]#[push-default]#{T;=/#{status-right-length}:status-right}#[pop-default]#[norange default]"
set -g status-format[1] "#[align=centre]#{P:#{?pane_active,#[reverse],}#{pane_index}[#{pane_width}x#{pane_height}]#[default] }"
set -g status-interval 15
set -g status-justify left
set -g status-keys vi
set -g status-left "[#{session_name}] "
set -g status-left-length 10
set -g status-left-style default
set -g status-position bottom
set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=21:pane_title}\" %H:%M %d-%b-%y"
set -g status-right-length 40
set -g status-right-style default
set -g status-style bg=green,fg=black
set -g update-environment[0] DISPLAY
set -g update-environment[1] KRB5CCNAME
set -g update-environment[2] SSH_ASKPASS
set -g update-environment[3] SSH_AUTH_SOCK
set -g update-environment[4] SSH_AGENT_PID
set -g update-environment[5] SSH_CONNECTION
set -g update-environment[6] WINDOWID
set -g update-environment[7] XAUTHORITY
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g word-separators " "

#####################################
# tmux show -s
#####################################

set -s backspace C-?
set -s buffer-limit 50
set -s command-alias[0] split-pane=split-window
set -s command-alias[1] splitp=split-window
set -s command-alias[2] "server-info=show-messages -JT"
set -s command-alias[3] "info=show-messages -JT"
set -s command-alias[4] "choose-window=choose-tree -w"
set -s command-alias[5] "choose-session=choose-tree -s"
set -s copy-command ''
set -s default-terminal screen
set -s editor nvim
set -s escape-time 500
set -s exit-empty on
set -s exit-unattached off
set -s extended-keys off
set -s focus-events off
set -s history-file ''
set -s message-limit 1000
set -s set-clipboard external
set -s terminal-overrides ""
set -s terminal-features[0] xterm*:clipboard:ccolour:cstyle:focus:title
set -s terminal-features[1] screen*:title
set -s user-keys ""

#####################################
# tmux show-window-options -g
#####################################

set-window-option -g aggressive-resize off
set-window-option -g allow-rename off
set-window-option -g alternate-screen on
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format "#{?pane_in_mode,[tmux],#{pane_current_command}}#{?pane_dead,[dead],}"
set-window-option -g clock-mode-colour blue
set-window-option -g clock-mode-style 24
set-window-option -g copy-mode-match-style bg=cyan,fg=black
set-window-option -g copy-mode-current-match-style bg=magenta,fg=black
set-window-option -g copy-mode-mark-style bg=red,fg=black
set-window-option -g main-pane-height 24
set-window-option -g main-pane-width 80
set-window-option -g mode-keys vi
set-window-option -g mode-style bg=yellow,fg=black
set-window-option -g monitor-activity off
set-window-option -g monitor-bell on
set-window-option -g monitor-silence 0
set-window-option -g other-pane-height 0
set-window-option -g other-pane-width 0
set-window-option -g pane-active-border-style "#{?pane_in_mode,fg=yellow,#{?synchronize-panes,fg=red,fg=green}}"
set-window-option -g pane-base-index 0
set-window-option -g pane-border-format "#{?pane_active,#[reverse],}#{pane_index}#[default] \"#{pane_title}\""
set-window-option -g pane-border-lines single
set-window-option -g pane-border-status off
set-window-option -g pane-border-style default
set-window-option -g remain-on-exit off
set-window-option -g synchronize-panes off
set-window-option -g window-active-style default
set-window-option -g window-size latest
set-window-option -g window-style default
set-window-option -g window-status-activity-style reverse
set-window-option -g window-status-bell-style reverse
set-window-option -g window-status-current-format "#I:#W#{?window_flags,#{window_flags}, }"
set-window-option -g window-status-current-style default
set-window-option -g window-status-format "#I:#W#{?window_flags,#{window_flags}, }"
set-window-option -g window-status-last-style default
set-window-option -g window-status-separator " "
set-window-option -g window-status-style default
set-window-option -g wrap-search on
set-window-option -g xterm-keys on

#####################################
# tmux show-hooks -g
#####################################

set-hook -gu after-bind-key
set-hook -gu after-capture-pane
set-hook -gu after-copy-mode
set-hook -gu after-display-message
set-hook -gu after-display-panes
set-hook -gu after-kill-pane
set-hook -gu after-list-buffers
set-hook -gu after-list-clients
set-hook -gu after-list-keys
set-hook -gu after-list-panes
set-hook -gu after-list-sessions
set-hook -gu after-list-windows
set-hook -gu after-load-buffer
set-hook -gu after-lock-server
set-hook -gu after-new-session
set-hook -gu after-new-window
set-hook -gu after-paste-buffer
set-hook -gu after-pipe-pane
set-hook -gu after-queue
set-hook -gu after-refresh-client
set-hook -gu after-rename-session
set-hook -gu after-rename-window
set-hook -gu after-resize-pane
set-hook -gu after-resize-window
set-hook -gu after-save-buffer
set-hook -gu after-select-layout
set-hook -gu after-select-pane
set-hook -gu after-select-window
set-hook -gu after-send-keys
set-hook -gu after-set-buffer
set-hook -gu after-set-environment
set-hook -gu after-set-hook
set-hook -gu after-set-option
set-hook -gu after-show-environment
set-hook -gu after-show-messages
set-hook -gu after-show-options
set-hook -gu after-split-window
set-hook -gu after-unbind-key
set-hook -gu alert-activity
set-hook -gu alert-bell
set-hook -gu alert-silence
set-hook -gu client-attached
set-hook -gu client-detached
set-hook -gu client-resized
set-hook -gu client-session-changed
set-hook -gu session-closed
set-hook -gu session-created
set-hook -gu session-renamed
set-hook -gu session-window-changed

#####################################
# tmux list-keys
#####################################

bind-key    -T copy-mode    C-Space              send-keys -X begin-selection
bind-key    -T copy-mode    C-a                  send-keys -X start-of-line
bind-key    -T copy-mode    C-b                  send-keys -X cursor-left
bind-key    -T copy-mode    C-c                  send-keys -X cancel
bind-key    -T copy-mode    C-e                  send-keys -X end-of-line
bind-key    -T copy-mode    C-f                  send-keys -X cursor-right
bind-key    -T copy-mode    C-g                  send-keys -X clear-selection
bind-key    -T copy-mode    C-k                  send-keys -X copy-pipe-end-of-line-and-cancel
bind-key    -T copy-mode    C-n                  send-keys -X cursor-down
bind-key    -T copy-mode    C-p                  send-keys -X cursor-up
#bind-key    -T copy-mode    C-r                  command-prompt -i -I "#{pane_search_string}" -T search -p "(search up)" { send-keys -X search-backward-incremental "%%" }
#bind-key    -T copy-mode    C-s                  command-prompt -i -I "#{pane_search_string}" -T search -p "(search down)" { send-keys -X search-forward-incremental "%%" }
bind-key    -T copy-mode    C-v                  send-keys -X page-down
bind-key    -T copy-mode    C-w                  send-keys -X copy-pipe-and-cancel
bind-key    -T copy-mode    Escape               send-keys -X cancel
bind-key    -T copy-mode    Space                send-keys -X page-down
bind-key    -T copy-mode    ,                    send-keys -X jump-reverse
bind-key    -T copy-mode    \;                   send-keys -X jump-again
#bind-key    -T copy-mode    F                    command-prompt -1 -p "(jump backward)" { send-keys -X jump-backward "%%" }
bind-key    -T copy-mode    N                    send-keys -X search-reverse
bind-key    -T copy-mode    P                    send-keys -X toggle-position
bind-key    -T copy-mode    R                    send-keys -X rectangle-toggle
#bind-key    -T copy-mode    T                    command-prompt -1 -p "(jump to backward)" { send-keys -X jump-to-backward "%%" }
bind-key    -T copy-mode    X                    send-keys -X set-mark
#bind-key    -T copy-mode    f                    command-prompt -1 -p "(jump forward)" { send-keys -X jump-forward "%%" }
#bind-key    -T copy-mode    g                    command-prompt -p "(goto line)" { send-keys -X goto-line "%%" }
bind-key    -T copy-mode    n                    send-keys -X search-again
bind-key    -T copy-mode    q                    send-keys -X cancel
bind-key    -T copy-mode    r                    send-keys -X refresh-from-pane
#bind-key    -T copy-mode    t                    command-prompt -1 -p "(jump to forward)" { send-keys -X jump-to-forward "%%" }
bind-key    -T copy-mode    MouseDown1Pane       select-pane
bind-key    -T copy-mode    MouseDrag1Pane       select-pane \; send-keys -X begin-selection
bind-key    -T copy-mode    MouseDragEnd1Pane    send-keys -X copy-pipe-and-cancel
bind-key    -T copy-mode    WheelUpPane          select-pane \; send-keys -X -N 5 scroll-up
bind-key    -T copy-mode    WheelDownPane        select-pane \; send-keys -X -N 5 scroll-down
bind-key    -T copy-mode    DoubleClick1Pane     select-pane \; send-keys -X select-word \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
bind-key    -T copy-mode    TripleClick1Pane     select-pane \; send-keys -X select-line \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
bind-key    -T copy-mode    Home                 send-keys -X start-of-line
bind-key    -T copy-mode    End                  send-keys -X end-of-line
bind-key    -T copy-mode    NPage                send-keys -X page-down
bind-key    -T copy-mode    PPage                send-keys -X page-up
bind-key    -T copy-mode    Up                   send-keys -X cursor-up
bind-key    -T copy-mode    Down                 send-keys -X cursor-down
bind-key    -T copy-mode    Left                 send-keys -X cursor-left
bind-key    -T copy-mode    Right                send-keys -X cursor-right
bind-key    -T copy-mode    M-C-b                send-keys -X previous-matching-bracket
bind-key    -T copy-mode    M-C-f                send-keys -X next-matching-bracket
#bind-key    -T copy-mode    M-1                  command-prompt -N -I 1 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode    M-2                  command-prompt -N -I 2 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode    M-3                  command-prompt -N -I 3 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode    M-4                  command-prompt -N -I 4 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode    M-5                  command-prompt -N -I 5 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode    M-6                  command-prompt -N -I 6 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode    M-7                  command-prompt -N -I 7 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode    M-8                  command-prompt -N -I 8 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode    M-9                  command-prompt -N -I 9 -p (repeat) { send-keys -N "%%" }
bind-key    -T copy-mode    M-<                  send-keys -X history-top
bind-key    -T copy-mode    M->                  send-keys -X history-bottom
bind-key    -T copy-mode    M-R                  send-keys -X top-line
bind-key    -T copy-mode    M-b                  send-keys -X previous-word
bind-key    -T copy-mode    M-f                  send-keys -X next-word-end
bind-key    -T copy-mode    M-m                  send-keys -X back-to-indentation
bind-key    -T copy-mode    M-r                  send-keys -X middle-line
bind-key    -T copy-mode    M-v                  send-keys -X page-up
bind-key    -T copy-mode    M-w                  send-keys -X copy-pipe-and-cancel
bind-key    -T copy-mode    M-x                  send-keys -X jump-to-mark
bind-key    -T copy-mode    "M-{"                send-keys -X previous-paragraph
bind-key    -T copy-mode    "M-}"                send-keys -X next-paragraph
bind-key    -T copy-mode    M-Up                 send-keys -X halfpage-up
bind-key    -T copy-mode    M-Down               send-keys -X halfpage-down
bind-key    -T copy-mode    C-Up                 send-keys -X scroll-up
bind-key    -T copy-mode    C-Down               send-keys -X scroll-down
bind-key    -T copy-mode-vi C-b                  send-keys -X page-up
bind-key    -T copy-mode-vi C-c                  send-keys -X cancel
bind-key    -T copy-mode-vi C-d                  send-keys -X halfpage-down
bind-key    -T copy-mode-vi C-e                  send-keys -X scroll-down
bind-key    -T copy-mode-vi C-f                  send-keys -X page-down
bind-key    -T copy-mode-vi C-h                  send-keys -X cursor-left
bind-key    -T copy-mode-vi C-j                  send-keys -X copy-pipe-and-cancel
bind-key    -T copy-mode-vi Enter                send-keys -X copy-pipe-and-cancel
bind-key    -T copy-mode-vi C-u                  send-keys -X halfpage-up
bind-key    -T copy-mode-vi C-v                  send-keys -X rectangle-toggle
bind-key    -T copy-mode-vi C-y                  send-keys -X scroll-up
bind-key    -T copy-mode-vi Escape               send-keys -X clear-selection
bind-key    -T copy-mode-vi Space                send-keys -X begin-selection
bind-key    -T copy-mode-vi \#                   send-keys -FX search-backward "#{copy_cursor_word}"
bind-key    -T copy-mode-vi \$                   send-keys -X end-of-line
bind-key    -T copy-mode-vi \%                   send-keys -X next-matching-bracket
bind-key    -T copy-mode-vi *                    send-keys -FX search-forward "#{copy_cursor_word}"
bind-key    -T copy-mode-vi ,                    send-keys -X jump-reverse
#bind-key    -T copy-mode-vi /                    command-prompt -T search -p "(search down)" { send-keys -X search-forward "%%" }
bind-key    -T copy-mode-vi 0                    send-keys -X start-of-line
#bind-key    -T copy-mode-vi 1                    command-prompt -N -I 1 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode-vi 2                    command-prompt -N -I 2 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode-vi 3                    command-prompt -N -I 3 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode-vi 4                    command-prompt -N -I 4 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode-vi 5                    command-prompt -N -I 5 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode-vi 6                    command-prompt -N -I 6 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode-vi 7                    command-prompt -N -I 7 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode-vi 8                    command-prompt -N -I 8 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode-vi 9                    command-prompt -N -I 9 -p (repeat) { send-keys -N "%%" }
#bind-key    -T copy-mode-vi :                    command-prompt -p "(goto line)" { send-keys -X goto-line "%%" }
bind-key    -T copy-mode-vi \;                   send-keys -X jump-again
#bind-key    -T copy-mode-vi ?                    command-prompt -T search -p "(search up)" { send-keys -X search-backward "%%" }
bind-key    -T copy-mode-vi A                    send-keys -X append-selection-and-cancel
bind-key    -T copy-mode-vi B                    send-keys -X previous-space
bind-key    -T copy-mode-vi D                    send-keys -X copy-pipe-end-of-line-and-cancel
bind-key    -T copy-mode-vi E                    send-keys -X next-space-end
#bind-key    -T copy-mode-vi F                    command-prompt -1 -p "(jump backward)" { send-keys -X jump-backward "%%" }
bind-key    -T copy-mode-vi G                    send-keys -X history-bottom
bind-key    -T copy-mode-vi H                    send-keys -X top-line
bind-key    -T copy-mode-vi J                    send-keys -X scroll-down
bind-key    -T copy-mode-vi K                    send-keys -X scroll-up
bind-key    -T copy-mode-vi L                    send-keys -X bottom-line
bind-key    -T copy-mode-vi M                    send-keys -X middle-line
bind-key    -T copy-mode-vi N                    send-keys -X search-reverse
bind-key    -T copy-mode-vi P                    send-keys -X toggle-position
#bind-key    -T copy-mode-vi T                    command-prompt -1 -p "(jump to backward)" { send-keys -X jump-to-backward "%%" }
bind-key    -T copy-mode-vi V                    send-keys -X select-line
bind-key    -T copy-mode-vi W                    send-keys -X next-space
bind-key    -T copy-mode-vi X                    send-keys -X set-mark
bind-key    -T copy-mode-vi ^                    send-keys -X back-to-indentation
bind-key    -T copy-mode-vi b                    send-keys -X previous-word
bind-key    -T copy-mode-vi e                    send-keys -X next-word-end
#bind-key    -T copy-mode-vi f                    command-prompt -1 -p "(jump forward)" { send-keys -X jump-forward "%%" }
bind-key    -T copy-mode-vi g                    send-keys -X history-top
bind-key    -T copy-mode-vi h                    send-keys -X cursor-left
bind-key    -T copy-mode-vi j                    send-keys -X cursor-down
bind-key    -T copy-mode-vi k                    send-keys -X cursor-up
bind-key    -T copy-mode-vi l                    send-keys -X cursor-right
bind-key    -T copy-mode-vi n                    send-keys -X search-again
bind-key    -T copy-mode-vi o                    send-keys -X other-end
bind-key    -T copy-mode-vi q                    send-keys -X cancel
bind-key    -T copy-mode-vi r                    send-keys -X refresh-from-pane
#bind-key    -T copy-mode-vi t                    command-prompt -1 -p "(jump to forward)" { send-keys -X jump-to-forward "%%" }
bind-key    -T copy-mode-vi v                    send-keys -X rectangle-toggle
bind-key    -T copy-mode-vi w                    send-keys -X next-word
bind-key    -T copy-mode-vi \{                   send-keys -X previous-paragraph
bind-key    -T copy-mode-vi \}                   send-keys -X next-paragraph
bind-key    -T copy-mode-vi MouseDown1Pane       select-pane
bind-key    -T copy-mode-vi MouseDrag1Pane       select-pane \; send-keys -X begin-selection
bind-key    -T copy-mode-vi MouseDragEnd1Pane    send-keys -X copy-pipe-and-cancel
bind-key    -T copy-mode-vi WheelUpPane          select-pane \; send-keys -X -N 5 scroll-up
bind-key    -T copy-mode-vi WheelDownPane        select-pane \; send-keys -X -N 5 scroll-down
bind-key    -T copy-mode-vi DoubleClick1Pane     select-pane \; send-keys -X select-word \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
bind-key    -T copy-mode-vi TripleClick1Pane     select-pane \; send-keys -X select-line \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
bind-key    -T copy-mode-vi BSpace               send-keys -X cursor-left
bind-key    -T copy-mode-vi NPage                send-keys -X page-down
bind-key    -T copy-mode-vi PPage                send-keys -X page-up
bind-key    -T copy-mode-vi Up                   send-keys -X cursor-up
bind-key    -T copy-mode-vi Down                 send-keys -X cursor-down
bind-key    -T copy-mode-vi Left                 send-keys -X cursor-left
bind-key    -T copy-mode-vi Right                send-keys -X cursor-right
bind-key    -T copy-mode-vi M-x                  send-keys -X jump-to-mark
bind-key    -T copy-mode-vi C-Up                 send-keys -X scroll-up
bind-key    -T copy-mode-vi C-Down               send-keys -X scroll-down
bind-key    -T prefix       C-b                  send-prefix
bind-key    -T prefix       C-o                  rotate-window
bind-key    -T prefix       C-z                  suspend-client
bind-key    -T prefix       Space                next-layout
bind-key    -T prefix       !                    break-pane
bind-key    -T prefix       \"                   split-window
bind-key    -T prefix       \#                   list-buffers
#bind-key    -T prefix       \$                   command-prompt -I "#S" { rename-session "%%" }
bind-key    -T prefix       \%                   split-window -h
bind-key    -T prefix       &                    confirm-before -p "kill-window #W? (y/n)" kill-window
#bind-key    -T prefix       \'                   command-prompt -T window-target -p index { select-window -t ":%%" }
bind-key    -T prefix       (                    switch-client -p
bind-key    -T prefix       )                    switch-client -n
#bind-key    -T prefix       ,                    command-prompt -I "#W" { rename-window "%%" }
bind-key    -T prefix       -                    delete-buffer
#bind-key    -T prefix       .                    command-prompt -T target { move-window -t "%%" }
#bind-key    -T prefix       /                    command-prompt -k -p key { list-keys -1N "%%" }
bind-key    -T prefix       0                    select-window -t :=0
bind-key    -T prefix       1                    select-window -t :=1
bind-key    -T prefix       2                    select-window -t :=2
bind-key    -T prefix       3                    select-window -t :=3
bind-key    -T prefix       4                    select-window -t :=4
bind-key    -T prefix       5                    select-window -t :=5
bind-key    -T prefix       6                    select-window -t :=6
bind-key    -T prefix       7                    select-window -t :=7
bind-key    -T prefix       8                    select-window -t :=8
bind-key    -T prefix       9                    select-window -t :=9
#bind-key    -T prefix       :                    command-prompt
bind-key    -T prefix       \;                   last-pane
#bind-key    -T prefix       <                    display-menu -T "#[align=centre]#{window_index}:#{window_name}" -x W -y W "#{?#{>:#{session_windows},1},,-}Swap Left" l { swap-window -t :-1 } "#{?#{>:#{session_windows},1},,-}Swap Right" r { swap-window -t :+1 } "#{?pane_marked_set,,-}Swap Marked" s { swap-window } '' Kill X { kill-window } Respawn R { respawn-window -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } Rename n { command-prompt -F -I "#W" { rename-window -t "#{window_id}" "%%" } } '' "New After" w { new-window -a } "New At End" W { new-window }
bind-key    -T prefix       =                    choose-buffer -Z
bind-key    -T prefix       >                    display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -x P -y P "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < { send-keys -X history-top } "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > { send-keys -X history-bottom } '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r { if-shell -F "#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}" "copy-mode -t=" ; send-keys -X -t = search-backward "#{q:mouse_word}" } "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y { copy-mode -q ; send-keys -l "#{q:mouse_word}" } "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c { copy-mode -q ; set-buffer "#{q:mouse_word}" } "#{?mouse_line,Copy Line,}" l { copy-mode -q ; set-buffer "#{q:mouse_line}" } '' "Horizontal Split" h { split-window -h } "Vertical Split" v { split-window -v } '' "#{?#{>:#{window_panes},1},,-}Swap Up" u { swap-pane -U } "#{?#{>:#{window_panes},1},,-}Swap Down" d { swap-pane -D } "#{?pane_marked_set,,-}Swap Marked" s { swap-pane } '' Kill X { kill-pane } Respawn R { respawn-pane -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z }
bind-key    -T prefix       ?                    list-keys -N
bind-key    -T prefix       C                    customize-mode -Z
bind-key    -T prefix       D                    choose-client -Z
bind-key    -T prefix       E                    select-layout -E
bind-key    -T prefix       L                    switch-client -l
bind-key    -T prefix       M                    select-pane -M
bind-key    -T prefix       [                    copy-mode
bind-key    -T prefix       ]                    paste-buffer -p
bind-key    -T prefix       c                    new-window
bind-key    -T prefix       d                    detach-client
#bind-key    -T prefix       f                    command-prompt { find-window -Z "%%" }
bind-key    -T prefix       i                    display-message
bind-key    -T prefix       l                    last-window
bind-key    -T prefix       m                    select-pane -m
bind-key    -T prefix       n                    next-window
bind-key    -T prefix       o                    select-pane -t :.+
bind-key    -T prefix       p                    previous-window
bind-key    -T prefix       q                    display-panes
bind-key    -T prefix       r                    refresh-client
bind-key    -T prefix       s                    choose-tree -Zs
bind-key    -T prefix       t                    clock-mode
bind-key    -T prefix       w                    choose-tree -Zw
bind-key    -T prefix       x                    confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key    -T prefix       z                    resize-pane -Z
bind-key    -T prefix       \{                   swap-pane -U
bind-key    -T prefix       \}                   swap-pane -D
bind-key    -T prefix       \~                   show-messages
bind-key -r -T prefix       DC                   refresh-client -c
bind-key    -T prefix       PPage                copy-mode -u
bind-key -r -T prefix       Up                   select-pane -U
bind-key -r -T prefix       Down                 select-pane -D
bind-key -r -T prefix       Left                 select-pane -L
bind-key -r -T prefix       Right                select-pane -R
bind-key    -T prefix       M-1                  select-layout even-horizontal
bind-key    -T prefix       M-2                  select-layout even-vertical
bind-key    -T prefix       M-3                  select-layout main-horizontal
bind-key    -T prefix       M-4                  select-layout main-vertical
bind-key    -T prefix       M-5                  select-layout tiled
bind-key    -T prefix       M-n                  next-window -a
bind-key    -T prefix       M-o                  rotate-window -D
bind-key    -T prefix       M-p                  previous-window -a
bind-key -r -T prefix       M-Up                 resize-pane -U 5
bind-key -r -T prefix       M-Down               resize-pane -D 5
bind-key -r -T prefix       M-Left               resize-pane -L 5
bind-key -r -T prefix       M-Right              resize-pane -R 5
bind-key -r -T prefix       C-Up                 resize-pane -U
bind-key -r -T prefix       C-Down               resize-pane -D
bind-key -r -T prefix       C-Left               resize-pane -L
bind-key -r -T prefix       C-Right              resize-pane -R
bind-key -r -T prefix       S-Up                 refresh-client -U 10
bind-key -r -T prefix       S-Down               refresh-client -D 10
bind-key -r -T prefix       S-Left               refresh-client -L 10
bind-key -r -T prefix       S-Right              refresh-client -R 10
bind-key    -T root         MouseDown1Pane       select-pane -t = \; send-keys -M
bind-key    -T root         MouseDown1Status     select-window -t =
bind-key    -T root         MouseDown2Pane       select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { paste-buffer -p }
bind-key    -T root         MouseDown3Pane       if-shell -F -t = "#{||:#{mouse_any_flag},#{&&:#{pane_in_mode},#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}}}" { select-pane -t = ; send-keys -M } { display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -t = -x M -y M "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < { send-keys -X history-top } "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > { send-keys -X history-bottom } '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r { if-shell -F "#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}" "copy-mode -t=" ; send-keys -X -t = search-backward "#{q:mouse_word}" } "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y { copy-mode -q ; send-keys -l "#{q:mouse_word}" } "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c { copy-mode -q ; set-buffer "#{q:mouse_word}" } "#{?mouse_line,Copy Line,}" l { copy-mode -q ; set-buffer "#{q:mouse_line}" } '' "Horizontal Split" h { split-window -h } "Vertical Split" v { split-window -v } '' "#{?#{>:#{window_panes},1},,-}Swap Up" u { swap-pane -U } "#{?#{>:#{window_panes},1},,-}Swap Down" d { swap-pane -D } "#{?pane_marked_set,,-}Swap Marked" s { swap-pane } '' Kill X { kill-pane } Respawn R { respawn-pane -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z } }
#bind-key    -T root         MouseDown3Status     display-menu -T "#[align=centre]#{window_index}:#{window_name}" -t = -x W -y W "#{?#{>:#{session_windows},1},,-}Swap Left" l { swap-window -t :-1 } "#{?#{>:#{session_windows},1},,-}Swap Right" r { swap-window -t :+1 } "#{?pane_marked_set,,-}Swap Marked" s { swap-window } '' Kill X { kill-window } Respawn R { respawn-window -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } Rename n { command-prompt -F -I "#W" { rename-window -t "#{window_id}" "%%" } } '' "New After" w { new-window -a } "New At End" W { new-window }
#bind-key    -T root         MouseDown3StatusLeft display-menu -T "#[align=centre]#{session_name}" -t = -x M -y W Next n { switch-client -n } Previous p { switch-client -p } '' Renumber N { move-window -r } Rename n { command-prompt -I "#S" { rename-session "%%" } } '' "New Session" s { new-session } "New Window" w { new-window }
bind-key    -T root         MouseDrag1Pane       if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -M }
bind-key    -T root         MouseDrag1Border     resize-pane -M
bind-key    -T root         WheelUpPane          if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -e }
bind-key    -T root         WheelUpStatus        previous-window
bind-key    -T root         WheelDownStatus      next-window
bind-key    -T root         DoubleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-word ; run-shell -d 0.3 ; send-keys -X copy-pipe-and-cancel }
bind-key    -T root         TripleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-line ; run-shell -d 0.3 ; send-keys -X copy-pipe-and-cancel }
bind-key    -T root         M-MouseDown3Pane     display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -t = -x M -y M "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < { send-keys -X history-top } "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > { send-keys -X history-bottom } '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r { if-shell -F "#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}" "copy-mode -t=" ; send-keys -X -t = search-backward "#{q:mouse_word}" } "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y { copy-mode -q ; send-keys -l "#{q:mouse_word}" } "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c { copy-mode -q ; set-buffer "#{q:mouse_word}" } "#{?mouse_line,Copy Line,}" l { copy-mode -q ; set-buffer "#{q:mouse_line}" } '' "Horizontal Split" h { split-window -h } "Vertical Split" v { split-window -v } '' "#{?#{>:#{window_panes},1},,-}Swap Up" u { swap-pane -U } "#{?#{>:#{window_panes},1},,-}Swap Down" d { swap-pane -D } "#{?pane_marked_set,,-}Swap Marked" s { swap-pane } '' Kill X { kill-pane } Respawn R { respawn-pane -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z }
