#!/usr/bin/env bash

## Deep update of dotfiles, including submodules

ALLOWED_DIRS=(
	"$HOME/Dotfiles"
)

main() {
	# For loop to check if pwd starts with update_dirs
	# if no, confirm before continuing
	for dir in "${ALLOWED_DIRS[@]}"; do
		if [[ "$PWD" == "$dir"* ]]; then
			continue 2
		fi

		echo "Current directory is not in allowed dirs"
		read -n1 -rp "Continue? [Y/n] " reply
		if [[ $reply =~ [Nn]$ ]]; then
			return 1
		fi
	done

	# Go into submodules and update the, but confirm first
	git submodule -q foreach 'echo $path' | while read -r path; do
		gitDir="${PWD}/${path}/.git"

		if [[ "$path" != "packages/"* ]]; then
			echo "Skipping $path"
			continue 2
		fi

		git --git-dir="${gitDir}" status -s

		echo "Listing files in $path"
	done

  echo "--"
	read -n1 -rp "Continue updating submodules? [Y/n] " reply
	if [[ $reply =~ [Nn]$ ]]; then
		return 1
	fi

	git submodule -q foreach 'echo $path' | while read -r path; do
		gitDir="${PWD}/${path}/.git"

		if [[ "$path" != "packages/"* ]]; then
			echo "Skipping $path"
			continue 2
		fi

		git --git-dir="${gitDir}" add -A
		git --git-dir="${gitDir}" commit -m "update"
		git --git-dir="${gitDir}" push
	done

  echo "--"
  echo "Listing files in root"

	git add -A
	git status -s

	read -n1 -rp "Continue? [Y/n] " reply
	if [[ $reply =~ [Nn]$ ]]; then
		return 1
	fi

	git commit -m "update"
	git push
}

main
