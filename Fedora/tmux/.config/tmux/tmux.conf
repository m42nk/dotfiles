#####################################
# vim: ft=tmux
#  _______________________________
# /\                              \
# \_|    __                       |
#   |   / /_____ ___  __  ___  __ |
#   |  / __/ __ `__ \/ / / / |/_/ |
#   | / /_/ / / / / / /_/ />  <   |
#   | \__/_/ /_/ /_/\__,_/_/|_|   |
#   |                 -by m42nk   |
#   |   __________________________|_
#    \_/____________________________/
#
#####################################

# tmux -f /dev/null -L temp start-server \; list-keys

#####################################
## General setup
#####################################

## Variables
_cfg_dir="~/.config/tmux"
_cfg_default="${_cfg_dir}/default.conf"
_cfg_file="${_cfg_dir}/tmux.conf"
_is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

## Prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

## Enable mouse
set -g mouse on

## Enable 256 color support
# set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"
set -as terminal-features ",*:RGB"
set -as terminal-features ',*:Smulx=\E[4::%p1%dm'

# Pane navigation
bind h select-pane -L # move left
bind j select-pane -D # move down
bind k select-pane -U # move up
bind l select-pane -R # move right

## Reload config
bind r run-shell {
  tmux source $_cfg_default $_cfg_file 2>&1 && \
  tmux display 'Config reloaded!'
}

#####################################
## Options
#####################################

## Server options
set -s focus-events on               # Enable focus-events inside tmux
set -s escape-time 10                # Reduce delay when pressing <Esc>
set -sg repeat-time 500              # How long tmux wait for repeatable (-r) bind-key
# set -s copy-command "xsel -sel clip" # System clipboard command (default is often fine)

## Vim movement in Copy mode
setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel

#####################################
## Status line
#####################################
## Setup
set  -g status-position top       # Put status line on top instead of bottom
set  -g status-style "bg=default" # Remove statusline bakcground
set  -g base-index 1              # Start windows numbering at 1
set  -g renumber-windows on       # Renumber windows when a window is closed
set  -g display-time 1000         # Longer status messages display time
set  -g set-titles on             # Allow tmux to change terminal title
set  -g status-interval 1         # Status update interval (in seconds)
setw -g automatic-rename on       # Rename window to reflect current program
setw -g pane-base-index 1         # Start pane numbering at 1

## Window status style and format
setw -g window-status-format '#I: #W'                         # Window indicator format Eg. 1: zsh
setw -g window-status-style 'none'                            # Window indicator style
setw -g window-status-current-format ' #I: #W '               # Current window format
setw -g window-status-current-style 'fg=black bg=blue bright' # Current window style

## Status line left/right
set -g status-left-length 100 # Increase length (default 40)
set -g status-left ""
set -ag status-left "[#{session_name}]"
# Show when prefix is pressed
set -ag status-left '#{s/.*/ \0 /:#{s/^root$//:client_key_table}}'

set -g status-right-length 100 # Increase length (default 40)
set -g status-right "" # Remove default
# Show when current pane is zoomed
set -ag status-right "#[bg=red,fg=black,bright]#{?window_zoomed_flag,[ZOOM],}#[default] "
# Count number of session
set -ag status-right "#[default][#(tmux ls | wc -l)]"

#####################################
## Keybinding
## Notes:
## -r = keybinding is repeatable (can be pressed multiple time without prefix)
#####################################
## Window navigation
unbind p
bind C-h previous-window                          #  Go to previous window

unbind n
bind C-l next-window                              #  Go to next window

bind -r o rotate-window                           #  Rotate panes inside window (counter clockwise)
bind -r Tab last-window                           #  move to last active window

## Window manipulation
bind -r Space next-layout                          #  Cycle window layout
bind -r > swap-pane -D                               #  Swap pane with next (by index)
bind -r < swap-pane -U                               #  Swap pane with previous (by index)

# bind -r C-S-h swap-window -t 2\; select-window -t -1
# bind -r C-S-l swap-window -t +1\; select-window -t +1


## Creation
bind n  new-session                               #  Create new session
bind c  new-window      -c "#{pane_current_path}" #  Create new window
bind \\ split-window -h -c "#{pane_current_path}" #  Backslash split vertical (`|` without shift)
bind -  split-window -v -c "#{pane_current_path}" #  Minus split horizontal

# pane join & breaking
# can be choose-tree, choose-client
# bind-key C-j choose-window 'join-pane -s "%%"'
bind ! break-pane -d # Break pane to a new window, but don't focus to it

## Key chording
bind-key a switch-client -T haloroot
bind-key -T haloroot g split-window -h
bind-key -T haloroot x split-window -v

# bind-key O if-shell  "$is_vim"  "send-keys C-h"  "select-pane -L"
# bind-key O send-keys "Escape"

# # pane resizing
# bind -r H resize-pane -L 2
# bind -r J resize-pane -D 2
# bind -r K resize-pane -U 2
# bind -r L resize-pane -R 2

# # edit dotfiles
# bind e run "tmux neww dots"
# bind C-s run "tmux-fuzzy-session"
# unbind "'"
# bind "'" run "tmux-fuzzy-window"

# # unbind Tab
# # bind -n Tab run "tmux-fuzzy-session"

# # Custom terminal commands
# bind Enter run "tmux-quickterm #{pane_current_path}"

# # managing todos
# bind t menu -x 0 -y S \
#   -T "Todo" \
#   "Add Todo" a 'display-popup -h 3 -d "#{pane_current_path}" -E "sh -c todo-add"' \
#   "Show Todo" s 'neww -c "#{pane_current_path}" "taskell #(find-todo)"'

# bind Space 'display-popup -h 80% -w 80% -d "#{pane_current_path}" -E "taskell #(find-todo)"'

# # cheatsheet
# # bind -r i run "tmux neww tmux-cht.sh"
# bind i display-popup -E tmux-cht

# # find session
# bind C-f command-prompt -p find-session 'switch-client -t %%'
# bind C-d kill-pane

# # bind -n C-S-Left swap-window -t -1\; select-window -t -1
# # bind -n C-S-Right swap-window -t +1\; select-window -t +1

# # bind -n M-S-Left swap-window -t -1\; select-window -t -1
# # bind -n M-S-Right swap-window -t +1\; select-window -t +1

# # bind -r "C-," swap-window -t -1\; select-window -t -1
# # bind -r "C-." swap-window -t +1\; select-window -t +1


# # Renumber sessions
# set-hook -g session-created "run tmux-renumber-sessions.sh"
# set-hook -g session-closed  "run tmux-renumber-sessions.sh"


# # Set title suffix to "- TMUX"
# set-option -g set-titles on
# set-option -g set-titles-string '#S: #W - TMUX'

# # Smart pane switching with awareness of vim splits and system windows
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
# 	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
