# vim mode
set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# default command (also for loading env)
# set-option -g default-command "/bin/zsh"

# display
set-option -g status-position top
# set-window-option -g window-status-current-format '[#I: #W]'
set-window-option -g window-status-current-format ' #I: #W '

set-window-option -g window-status-current-style fg=black,bg=blue,bright
# set-window-option -g window-status-current-style fg=blue,bg=default,bright
set-window-option -g window-status-format '#I: #W'
set-window-option -g monitor-activity on

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

unbind C-b 
set -g prefix C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -s escape-time 10                     # faster command sequences
set -sg repeat-time 500                   # increase repeat timeout
set -s focus-events on

set -g status-style 'bg=default fg=color7'

# Mouse
set -g mouse on

# status bar
set -g status-right-length 100
set -g status-right ""
set -ag status-right "#[fg=blue]#{?client_prefix,#[reverse] <pfx> #[noreverse],}"
set -ag status-right "#[fg=brightred]#(if tmux list-panes -F '#F' | grep -q Z; then echo \" Z\"; fi)"
# set -ag status-right "#[fg=yellow] #{?TODO,TODO: #(head -n 3 TODO.md | tail -1 | sed 's/- //'),}"
set -ag status-right "#[fg=gray] #(head -n 3 `find-todo #{pane_current_path}` | tail -1 | sed 's/- //' | sed 's/^/TODO: /')"
# set -ag status-right "#[fg=color7] [#(echo #{:pane_title} | truncate-dir)]"
set -ag status-right " #[bg=blue,fg=black,bright][#(tmux ls | wc -l)]"
set -g status-interval 1

# edit dotfiles
bind e run "tmux neww dots"
bind C-s run "tmux-fuzzy-session"
bind C-Space next-layout
bind C-n new-session
# unbind Tab
# bind -n Tab run "tmux-fuzzy-session"

# Custom terminal commands
bind Enter run "tmux-quickterm #{pane_current_path}"

# managing todos
# bind T neww -c "#{pane_current_path}" "taskell `find-todo`"
# bind t display-popup -h 3 -d "#{pane_current_path}" -E "sh -c todo-add"
bind t menu -x 0 -y S \
  -T "Todo" \
  "Add Todo" a 'display-popup -h 3 -d "#{pane_current_path}" -E "sh -c todo-add"' \
  "Show Todo" s "neww -c #{pane_current_path} 'taskell #(find-todo)'"


# %if "#{==:#{TODO},}" bind c-t set-environment TODO "true" %endif
# bind n run "todo-next"

# cheatsheet
bind -r i run "tmux neww tmux-cht.sh"

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'
bind C-d kill-pane

# window movement
bind -r C-S-h swap-window -t 2\; select-window -t -1
bind -r C-S-l swap-window -t +1\; select-window -t +1

# bind -n C-S-Left swap-window -t -1\; select-window -t -1
# bind -n C-S-Right swap-window -t +1\; select-window -t +1

bind -n M-S-Left swap-window -t -1\; select-window -t -1
bind -n M-S-Right swap-window -t +1\; select-window -t +1

# pane navigation
bind h select-pane -L  # move left
bind j select-pane -D  # move down
bind k select-pane -U  # move up
bind l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
bind -n C-k copy-mode
bind -n C-j copy-mode

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r z resize-pane -Z    # hold prefix instead of one-off command
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind -r o rotate-window     # select next window
bind Tab last-window        # move to last active window

# new pane
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}" # | char without shift
bind - split-window -c "#{pane_current_path}"

bind r source-file ~/.config/tmux/tmux.conf


# Renumber sessions
set-hook -g session-created "run tmux-renumber-sessions.sh"
set-hook -g session-closed  "run tmux-renumber-sessions.sh"

# Resurect
# set -g @resurrect-dir '~/.config/tmux/resurrects'
# set -g @resurrect-processs '"~yarn dev->fnm use 14 && dev"'
# run-shell ~/.config/tmux/plugins/tmux-resurrect/resurrect.tmux

