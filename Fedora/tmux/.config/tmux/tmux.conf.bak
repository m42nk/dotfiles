# if-shell "notify-send #(tmux showenv halo)" run "ls"

#  _______________________________
# /\                              \
# \_|    __                       |
#   |   / /_____ ___  __  ___  __ |
#   |  / __/ __ `__ \/ / / / |/_/ |
#   | / /_/ / / / / / /_/ />  <   |
#   | \__/_/ /_/ /_/\__,_/_/|_|   |
#   |                 -by m42nk   |
#   |   __________________________|_
#    \_/____________________________/


# ┌──────────────────┐
# │     general      │
# └──────────────────┘
unbind C-b                                # unbinds control-b
set -g prefix C-a
set -g prefix2 C-a                         # binds c-a as prefix
bind C-a send-prefix -2

set -s escape-time 10                     # faster command sequences
set -sg repeat-time 500                   # increase repeat timeout
set -s focus-events on

setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# display
setw -g window-status-current-format ' #I: #W '             # 1: zsh
setw -g window-status-current-style fg=black,bg=blue,bright
setw -g window-status-format '#I: #W'

setw -g automatic-rename on   # rename window to reflect current program
setw -g pane-base-index 1     # make pane numbering consistent with windows

set -g base-index 1           # start windows numbering at 1
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
set -g status-position top

set -g status-style 'bg=default fg=color7'
# set -g status-style 'bg=default fg=black'

# Mouse
set -g mouse on

# status bar
set -g status-right-length 100
set -g status-right ""
set -ag status-right "#[fg=blue]#{?client_prefix,#[reverse] <pfx> #[noreverse],}"
set -ag status-right "#[fg=brightred]#(if tmux list-panes -F '#F' | grep -q Z; then echo \" Z\"; fi)"
set -ag status-right " #[bg=blue,fg=black,bright][#(tmux ls | wc -l)]"
set -g status-interval 1

# edit dotfiles
bind e run "tmux neww dots"
bind C-s run "tmux-fuzzy-session"
unbind "'"
bind "'" run "tmux-fuzzy-window"
bind C-Space next-layout

unbind n
bind n new-session

# bind ! break-pane -d
bind ! break-pane \; last-window
bind C-! break-pane
bind M-l last-window

# unbind Tab
# bind -n Tab run "tmux-fuzzy-session"

# Custom terminal commands
bind Enter run "tmux-quickterm #{pane_current_path}"

# managing todos
bind t menu -x 0 -y S \
  -T "Todo" \
  "Add Todo" a 'display-popup -h 3 -d "#{pane_current_path}" -E "sh -c todo-add"' \
  "Show Todo" s 'neww -c "#{pane_current_path}" "taskell #(find-todo)"'

bind Space 'display-popup -h 80% -w 80% -d "#{pane_current_path}" -E "taskell #(find-todo)"'

# cheatsheet
# bind -r i run "tmux neww tmux-cht.sh"
bind i display-popup -E tmux-cht

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'
bind C-d kill-pane

# window movement
bind -r C-S-h swap-window -t 2\; select-window -t -1
bind -r C-S-l swap-window -t +1\; select-window -t +1

# bind -n C-S-Left swap-window -t -1\; select-window -t -1
# bind -n C-S-Right swap-window -t +1\; select-window -t +1

# bind -n M-S-Left swap-window -t -1\; select-window -t -1
# bind -n M-S-Right swap-window -t +1\; select-window -t +1

# bind -r "C-," swap-window -t -1\; select-window -t -1
# bind -r "C-." swap-window -t +1\; select-window -t +1

# pane navigation
bind h select-pane -L # move left
bind j select-pane -D # move down
bind k select-pane -U # move up
bind l select-pane -R # move right

bind > swap-pane -D   # swap current pane with the next one
bind < swap-pane -U   # swap current pane with the previous one

# pane join & breaking
bind-key V choose-window 'join-pane -s "%%"'

bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}" # | char without shift
bind - split-window -c "#{pane_current_path}"

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
# unbind n
unbind p
bind -r z resize-pane -Z    # hold prefix instead of one-off command
bind C-h previous-window # select previous window
bind C-l next-window     # select next window
bind -r o rotate-window     # select next window
bind Tab last-window        # move to last active window


bind r source-file ~/.config/tmux/tmux.conf

# Renumber sessions
set-hook -g session-created "run tmux-renumber-sessions.sh"
set-hook -g session-closed  "run tmux-renumber-sessions.sh"


# Set title suffix to "- TMUX"
set-option -g set-titles on
set-option -g set-titles-string '#S: #W - TMUX'

# Smart pane switching with awareness of vim splits and system windows
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
